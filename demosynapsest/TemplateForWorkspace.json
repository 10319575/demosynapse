{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"workspaceName": {
			"type": "string",
			"metadata": "Workspace name",
			"defaultValue": "demosynapsest"
		},
		"AzureSynapseAnalytics_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSynapseAnalytics'"
		},
		"demosynapsest-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'demosynapsest-WorkspaceDefaultSqlServer'"
		},
		"sql_onprem_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'sql_onprem'"
		},
		"azureMLst_properties_typeProperties_subscriptionId": {
			"type": "string",
			"defaultValue": "d633e14e-b627-40ae-8c9a-7f0dc15c2bd7"
		},
		"azureMLst_properties_typeProperties_resourceGroupName": {
			"type": "string",
			"defaultValue": "rauljareno"
		},
		"demosynapsest-WorkspaceDefaultStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adldemost.dfs.core.windows.net"
		},
		"kvrjz_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://kvrjz2.vault.azure.net/"
		}
	},
	"variables": {
		"workspaceId": "[concat('Microsoft.Synapse/workspaces/', parameters('workspaceName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('workspaceName'), '/APSparkPoolST')]",
			"type": "Microsoft.Synapse/workspaces/bigDataPools",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/00_main')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Extract",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "01_extract_sales",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Transforma_Move",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Extract",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "02_move_to_application",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Load DW",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Transforma_Move",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "03_load_tables_sql",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "AdventureWorks"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/01_extract_sales')]",
				"[concat(variables('workspaceId'), '/pipelines/02_move_to_application')]",
				"[concat(variables('workspaceId'), '/pipelines/03_load_tables_sql')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/01_extract_sales')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Copy data Sales",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT h.[SalesOrderID]\n      ,[OrderDate]\n      ,[DueDate]\n      ,[ShipDate]\n      ,[Status]\n      ,[OnlineOrderFlag]\n      ,[CustomerID]\n      ,[SalesPersonID]\n      ,[TerritoryID]\n      ,[ShipMethodID]      \n\t  ,[ProductID]\n\t  ,[OrderQty]\n      ,[UnitPrice]\n      ,[UnitPriceDiscount]\n      ,[LineTotal]\n  FROM [AdventureWorks2019].[Sales].[SalesOrderDetail] d\n\tinner join [AdventureWorks2019].[Sales].[SalesOrderHeader] h on d.SalesOrderID = h.SalesOrderID",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SalesOrderID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SalesOrderID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "OrderDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "OrderDate",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "DueDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "DueDate",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ShipDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ShipDate",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "Status",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "OnlineOrderFlag",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "OnlineOrderFlag",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CustomerID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "CustomerID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SalesPersonID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SalesPersonID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TerritoryID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TerritoryID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ShipMethodID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ShipMethodID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ProductID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ProductID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "OrderQty",
											"type": "Int16",
											"physicalType": "smallint"
										},
										"sink": {
											"name": "OrderQty",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "UnitPrice",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										},
										"sink": {
											"name": "UnitPrice",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "UnitPriceDiscount",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										},
										"sink": {
											"name": "UnitPriceDiscount",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "LineTotal",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 38
										},
										"sink": {
											"name": "LineTotal",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "src_Sales",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "adl_raw_sales",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy data Customer",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT [CustomerID]\n      ,[PersonID]\n      ,[StoreID]\n      ,[TerritoryID]\n      ,[AccountNumber]\n      ,[ModifiedDate]\n  FROM [AdventureWorks2019].[Sales].[Customer]\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CustomerID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "CustomerID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "PersonID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "PersonID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "StoreID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "StoreID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TerritoryID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TerritoryID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "AccountNumber",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AccountNumber",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "src_customers",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "adl_raw_customers",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy data Sales Person",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT p.[BusinessEntityID]\n      ,p.[TerritoryID]\n      ,[SalesQuota]\n      ,[Bonus]\n      ,[CommissionPct]       \n  FROM [AdventureWorks2019].[Sales].[SalesPerson] p",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "BusinessEntityID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "BusinessEntityID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TerritoryID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TerritoryID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SalesQuota",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										},
										"sink": {
											"name": "SalesQuota",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Bonus",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										},
										"sink": {
											"name": "Bonus",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CommissionPct",
											"type": "Decimal",
											"physicalType": "smallmoney",
											"scale": 4,
											"precision": 10
										},
										"sink": {
											"name": "CommissionPct",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "src_salesperson",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "adl_raw_salesperson",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy data Territory",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT [TerritoryID]\n      ,[Name]\n      ,[CountryRegionCode]\n      ,[Group]\n      ,[SalesYTD]\n      ,[SalesLastYear]\n      ,[CostYTD]\n      ,[CostLastYear]\n      ,[rowguid]\n      ,[ModifiedDate]\n  FROM [AdventureWorks2019].[Sales].[SalesTerritory]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "TerritoryID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TerritoryID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Name",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Name",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CountryRegionCode",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CountryRegionCode",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Group",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Group",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SalesYTD",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										},
										"sink": {
											"name": "SalesYTD",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SalesLastYear",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										},
										"sink": {
											"name": "SalesLastYear",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CostYTD",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										},
										"sink": {
											"name": "CostYTD",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CostLastYear",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										},
										"sink": {
											"name": "CostLastYear",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "rowguid",
											"type": "Guid",
											"physicalType": "uniqueidentifier"
										},
										"sink": {
											"name": "rowguid",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "src_territory",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "adl_raw_territory",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy data ShipMethod",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT [ShipMethodID]\n      ,[Name]\n      ,[ShipBase]\n      ,[ShipRate]\n      ,[rowguid]\n      ,[ModifiedDate]\n  FROM [AdventureWorks2019].[Purchasing].[ShipMethod]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ShipMethodID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ShipMethodID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Name",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Name",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ShipBase",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										},
										"sink": {
											"name": "ShipBase",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ShipRate",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										},
										"sink": {
											"name": "ShipRate",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "rowguid",
											"type": "Guid",
											"physicalType": "uniqueidentifier"
										},
										"sink": {
											"name": "rowguid",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "src_shipmethod",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "adl_raw_shipmethod",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy data Product",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT [ProductID]\n      ,p.[Name]\n      ,[ProductNumber]\n      ,[MakeFlag]\n      ,[FinishedGoodsFlag]\n      ,[Color]\n      ,[SafetyStockLevel]\n      ,[ReorderPoint]\n      ,[StandardCost]\n      ,[ListPrice]\n      ,[Size]\n      ,[SizeUnitMeasureCode]\n      ,[WeightUnitMeasureCode]\n      ,[Weight]\n      ,[DaysToManufacture]\n      ,[ProductLine]\n      ,[Class]\n      ,[Style]\n      ,[ProductModelID]\n      ,[SellStartDate]\n      ,[SellEndDate]\n      ,[DiscontinuedDate]   \n\t  ,c.Name as ProductCategory\n\t  ,s.Name as ProductSubcategory\n  FROM [AdventureWorks2019].[Production].[Product] p\n\t\tinner join [AdventureWorks2019].[Production].ProductSubcategory s on s.ProductSubcategoryID = p.ProductSubcategoryID\n\t\tinner join [AdventureWorks2019].[Production].ProductCategory c on s.ProductCategoryID = c.ProductCategoryID",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ProductID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ProductID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Name",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Name",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ProductNumber",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ProductNumber",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "MakeFlag",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "MakeFlag",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "FinishedGoodsFlag",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "FinishedGoodsFlag",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Color",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Color",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SafetyStockLevel",
											"type": "Int16",
											"physicalType": "smallint"
										},
										"sink": {
											"name": "SafetyStockLevel",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ReorderPoint",
											"type": "Int16",
											"physicalType": "smallint"
										},
										"sink": {
											"name": "ReorderPoint",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "StandardCost",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										},
										"sink": {
											"name": "StandardCost",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ListPrice",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										},
										"sink": {
											"name": "ListPrice",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Size",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Size",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SizeUnitMeasureCode",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "SizeUnitMeasureCode",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "WeightUnitMeasureCode",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "WeightUnitMeasureCode",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Weight",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 8
										},
										"sink": {
											"name": "Weight",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "DaysToManufacture",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "DaysToManufacture",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ProductLine",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "ProductLine",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Class",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Class",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Style",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Style",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ProductModelID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ProductModelID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SellStartDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "SellStartDate",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SellEndDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "SellEndDate",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "DiscontinuedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "DiscontinuedDate",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ProductCategory",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ProductCategory",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ProductSubcategory",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ProductSubcategory",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "src_products",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "adl_raw_product",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "AdventureWorks"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/src_Sales')]",
				"[concat(variables('workspaceId'), '/datasets/adl_raw_sales')]",
				"[concat(variables('workspaceId'), '/datasets/src_customers')]",
				"[concat(variables('workspaceId'), '/datasets/adl_raw_customers')]",
				"[concat(variables('workspaceId'), '/datasets/src_salesperson')]",
				"[concat(variables('workspaceId'), '/datasets/adl_raw_salesperson')]",
				"[concat(variables('workspaceId'), '/datasets/src_territory')]",
				"[concat(variables('workspaceId'), '/datasets/adl_raw_territory')]",
				"[concat(variables('workspaceId'), '/datasets/src_shipmethod')]",
				"[concat(variables('workspaceId'), '/datasets/adl_raw_shipmethod')]",
				"[concat(variables('workspaceId'), '/datasets/src_products')]",
				"[concat(variables('workspaceId'), '/datasets/adl_raw_product')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/02_move_to_application')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Load Entities",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "load entities",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Customers": {},
									"SalesPerson": {},
									"Territory": {},
									"ShipMethod": {},
									"Product": {},
									"appcustomers": {},
									"appsalesperson": {},
									"appTerritory": {},
									"appShipmethod": {},
									"appProduct": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Load Sales",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Load Entities",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Load_Sales",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"sales": {},
									"customers": {},
									"product": {},
									"salesPerson": {},
									"shipmethod": {},
									"territory": {},
									"appsales": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "AdventureWorks"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/load entities')]",
				"[concat(variables('workspaceId'), '/dataflows/Load_Sales')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/03_load_tables_sql')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "dim_customers",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowCopyCommand": true,
								"copyCommandSettings": {},
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CustomerID",
											"type": "Int32"
										},
										"sink": {
											"name": "CustomerID"
										}
									},
									{
										"source": {
											"name": "PersonID",
											"type": "Int32"
										},
										"sink": {
											"name": "PersonID"
										}
									},
									{
										"source": {
											"name": "StoreID",
											"type": "Int32"
										},
										"sink": {
											"name": "StoreID"
										}
									},
									{
										"source": {
											"name": "TerritoryID",
											"type": "Int32"
										},
										"sink": {
											"name": "TerritoryID"
										}
									},
									{
										"source": {
											"name": "AccountNumber",
											"type": "String"
										},
										"sink": {
											"name": "AccountNumber"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "ModifiedDate"
										}
									},
									{
										"source": {
											"name": "id_sk_customer",
											"type": "Int64"
										},
										"sink": {
											"name": "id_sk_customer"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "adl_app_customers",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dim_customer",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "fact_Sales",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "dim_territory",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowCopyCommand": true,
								"copyCommandSettings": {},
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id_sk_customer",
											"type": "Int64"
										},
										"sink": {
											"name": "id_sk_customer",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "OrderDate",
											"type": "String"
										},
										"sink": {
											"name": "OrderDate",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "id_sk_product",
											"type": "Int64"
										},
										"sink": {
											"name": "id_sk_product",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "id_sk_salesperson",
											"type": "Int64"
										},
										"sink": {
											"name": "id_sk_salesperson",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "id_sk_shipmethod",
											"type": "Int64"
										},
										"sink": {
											"name": "id_sk_shipmethod",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "id_sk_territory",
											"type": "Int64"
										},
										"sink": {
											"name": "id_sk_territory",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "OrderQty",
											"type": "Double"
										},
										"sink": {
											"name": "OrderQty",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "UnitPrice",
											"type": "Double"
										},
										"sink": {
											"name": "UnitPrice",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "UnitPriceDiscount",
											"type": "Double"
										},
										"sink": {
											"name": "UnitPriceDiscount",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "LineTotal",
											"type": "Double"
										},
										"sink": {
											"name": "LineTotal",
											"type": "Double"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "adl_app_sales",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "fact_sales",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "dim_product",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "dim_customers",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowCopyCommand": true,
								"copyCommandSettings": {},
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ProductID",
											"type": "Int32"
										},
										"sink": {
											"name": "ProductID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Name",
											"type": "String"
										},
										"sink": {
											"name": "Name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ProductNumber",
											"type": "String"
										},
										"sink": {
											"name": "ProductNumber",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "MakeFlag",
											"type": "Int32"
										},
										"sink": {
											"name": "MakeFlag",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "FinishedGoodsFlag",
											"type": "Int32"
										},
										"sink": {
											"name": "FinishedGoodsFlag",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Color",
											"type": "String"
										},
										"sink": {
											"name": "Color",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SafetyStockLevel",
											"type": "Int32"
										},
										"sink": {
											"name": "SafetyStockLevel",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "ReorderPoint",
											"type": "Int32"
										},
										"sink": {
											"name": "ReorderPoint",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "StandardCost",
											"type": "Single"
										},
										"sink": {
											"name": "StandardCost",
											"type": "Single"
										}
									},
									{
										"source": {
											"name": "ListPrice",
											"type": "Single"
										},
										"sink": {
											"name": "ListPrice",
											"type": "Single"
										}
									},
									{
										"source": {
											"name": "Size",
											"type": "String"
										},
										"sink": {
											"name": "Size",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SizeUnitMeasureCode",
											"type": "String"
										},
										"sink": {
											"name": "SizeUnitMeasureCode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "WeightUnitMeasureCode",
											"type": "String"
										},
										"sink": {
											"name": "WeightUnitMeasureCode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Weight",
											"type": "Decimal"
										},
										"sink": {
											"name": "Weight",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "DaysToManufacture",
											"type": "Int32"
										},
										"sink": {
											"name": "DaysToManufacture",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "ProductLine",
											"type": "String"
										},
										"sink": {
											"name": "ProductLine",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Class",
											"type": "String"
										},
										"sink": {
											"name": "Class",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Style",
											"type": "String"
										},
										"sink": {
											"name": "Style",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ProductModelID",
											"type": "Int32"
										},
										"sink": {
											"name": "ProductModelID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "SellStartDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "SellStartDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "SellEndDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "SellEndDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "DiscontinuedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "DiscontinuedDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "ProductCategory",
											"type": "String"
										},
										"sink": {
											"name": "ProductCategory",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ProductSubcategory",
											"type": "String"
										},
										"sink": {
											"name": "ProductSubcategory",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "id_sk_product",
											"type": "Int64"
										},
										"sink": {
											"name": "id_sk_product",
											"type": "Int64"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "adl_app_product",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dim_product",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "dim_salesperson",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "dim_product",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowCopyCommand": true,
								"copyCommandSettings": {},
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "BusinessEntityID",
											"type": "Int32"
										},
										"sink": {
											"name": "BusinessEntityID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "TerritoryID",
											"type": "Int32"
										},
										"sink": {
											"name": "TerritoryID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "SalesQuota",
											"type": "Single"
										},
										"sink": {
											"name": "SalesQuota",
											"type": "Single"
										}
									},
									{
										"source": {
											"name": "Bonus",
											"type": "Single"
										},
										"sink": {
											"name": "Bonus",
											"type": "Single"
										}
									},
									{
										"source": {
											"name": "CommissionPct",
											"type": "Single"
										},
										"sink": {
											"name": "CommissionPct",
											"type": "Single"
										}
									},
									{
										"source": {
											"name": "id_sk_salesperson",
											"type": "Int64"
										},
										"sink": {
											"name": "id_sk_salesperson",
											"type": "Int64"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "adl_app_salesperson",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dim_salesperson",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "dim_shipmethod",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "dim_salesperson",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowCopyCommand": true,
								"copyCommandSettings": {},
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ShipMethodID",
											"type": "Int32"
										},
										"sink": {
											"name": "ShipMethodID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Name",
											"type": "String"
										},
										"sink": {
											"name": "Name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ShipBase",
											"type": "Single"
										},
										"sink": {
											"name": "ShipBase",
											"type": "Single"
										}
									},
									{
										"source": {
											"name": "ShipRate",
											"type": "Single"
										},
										"sink": {
											"name": "ShipRate",
											"type": "Single"
										}
									},
									{
										"source": {
											"name": "rowguid",
											"type": "String"
										},
										"sink": {
											"name": "rowguid",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "id_sk_shipmethod",
											"type": "Int64"
										},
										"sink": {
											"name": "id_sk_shipmethod",
											"type": "Int64"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "adl_app_shipmethod",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dim_shipmethod",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "dim_territory",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "dim_shipmethod",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowCopyCommand": true,
								"copyCommandSettings": {},
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "TerritoryID",
											"type": "Int32"
										},
										"sink": {
											"name": "TerritoryID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Name",
											"type": "String"
										},
										"sink": {
											"name": "Name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CountryRegionCode",
											"type": "String"
										},
										"sink": {
											"name": "CountryRegionCode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Group",
											"type": "String"
										},
										"sink": {
											"name": "Group",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SalesYTD",
											"type": "Single"
										},
										"sink": {
											"name": "SalesYTD",
											"type": "Single"
										}
									},
									{
										"source": {
											"name": "SalesLastYear",
											"type": "Single"
										},
										"sink": {
											"name": "SalesLastYear",
											"type": "Single"
										}
									},
									{
										"source": {
											"name": "CostYTD",
											"type": "String"
										},
										"sink": {
											"name": "CostYTD",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CostLastYear",
											"type": "Single"
										},
										"sink": {
											"name": "CostLastYear",
											"type": "Single"
										}
									},
									{
										"source": {
											"name": "rowguid",
											"type": "String"
										},
										"sink": {
											"name": "rowguid",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "id_sk_territory",
											"type": "Int64"
										},
										"sink": {
											"name": "id_sk_territory",
											"type": "Int64"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "adl_app_territory",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dim_territory",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "AdventureWorks"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/adl_app_customers')]",
				"[concat(variables('workspaceId'), '/datasets/dim_customer')]",
				"[concat(variables('workspaceId'), '/datasets/adl_app_sales')]",
				"[concat(variables('workspaceId'), '/datasets/fact_sales')]",
				"[concat(variables('workspaceId'), '/datasets/adl_app_product')]",
				"[concat(variables('workspaceId'), '/datasets/dim_product')]",
				"[concat(variables('workspaceId'), '/datasets/adl_app_salesperson')]",
				"[concat(variables('workspaceId'), '/datasets/dim_salesperson')]",
				"[concat(variables('workspaceId'), '/datasets/adl_app_shipmethod')]",
				"[concat(variables('workspaceId'), '/datasets/dim_shipmethod')]",
				"[concat(variables('workspaceId'), '/datasets/adl_app_territory')]",
				"[concat(variables('workspaceId'), '/datasets/dim_territory')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DelimitedText1')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "demosynapsest-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ML"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "credit_test.csv",
						"folderPath": "raw/MLExample",
						"fileSystem": "synapse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "LoanID",
						"type": "String"
					},
					{
						"name": "CustomerID",
						"type": "String"
					},
					{
						"name": "LoanStatus",
						"type": "String"
					},
					{
						"name": "CurrentLoanAmount",
						"type": "String"
					},
					{
						"name": "Term",
						"type": "String"
					},
					{
						"name": "CreditScore",
						"type": "String"
					},
					{
						"name": "AnnualIncome",
						"type": "String"
					},
					{
						"name": "Yearsincurrentjob",
						"type": "String"
					},
					{
						"name": "HomeOwnership",
						"type": "String"
					},
					{
						"name": "Purpose",
						"type": "String"
					},
					{
						"name": "MonthlyDebt",
						"type": "String"
					},
					{
						"name": "YearsofCreditHistory",
						"type": "String"
					},
					{
						"name": "Monthssincelastdelinquent",
						"type": "String"
					},
					{
						"name": "NumberofOpenAccounts",
						"type": "String"
					},
					{
						"name": "NumberofCreditProblems",
						"type": "String"
					},
					{
						"name": "CurrentCreditBalance",
						"type": "String"
					},
					{
						"name": "MaximumOpenCredit",
						"type": "String"
					},
					{
						"name": "Bankruptcies",
						"type": "String"
					},
					{
						"name": "TaxLiens",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/demosynapsest-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/adl_app_customers')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "demosynapsest-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "sales/adl"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "customers.parquet",
						"folderPath": "application/sales",
						"fileSystem": "synapse"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "CustomerID",
						"type": "INT32"
					},
					{
						"name": "PersonID",
						"type": "INT32"
					},
					{
						"name": "StoreID",
						"type": "INT32"
					},
					{
						"name": "TerritoryID",
						"type": "INT32"
					},
					{
						"name": "AccountNumber",
						"type": "UTF8"
					},
					{
						"name": "ModifiedDate",
						"type": "INT96"
					},
					{
						"name": "id_sk_customer",
						"type": "INT64"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/demosynapsest-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/adl_app_product')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "demosynapsest-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "sales/adl"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "products.parquet",
						"folderPath": "application/sales",
						"fileSystem": "synapse"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "ProductID",
						"type": "INT32"
					},
					{
						"name": "Name",
						"type": "UTF8"
					},
					{
						"name": "ProductNumber",
						"type": "UTF8"
					},
					{
						"name": "MakeFlag",
						"type": "INT32"
					},
					{
						"name": "FinishedGoodsFlag",
						"type": "INT32"
					},
					{
						"name": "Color",
						"type": "UTF8"
					},
					{
						"name": "SafetyStockLevel",
						"type": "INT32"
					},
					{
						"name": "ReorderPoint",
						"type": "INT32"
					},
					{
						"name": "StandardCost",
						"type": "FLOAT"
					},
					{
						"name": "ListPrice",
						"type": "FLOAT"
					},
					{
						"name": "Size",
						"type": "UTF8"
					},
					{
						"name": "SizeUnitMeasureCode",
						"type": "UTF8"
					},
					{
						"name": "WeightUnitMeasureCode",
						"type": "UTF8"
					},
					{
						"name": "Weight",
						"type": "DECIMAL",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "DaysToManufacture",
						"type": "INT32"
					},
					{
						"name": "ProductLine",
						"type": "UTF8"
					},
					{
						"name": "Class",
						"type": "UTF8"
					},
					{
						"name": "Style",
						"type": "UTF8"
					},
					{
						"name": "ProductModelID",
						"type": "INT32"
					},
					{
						"name": "SellStartDate",
						"type": "INT96"
					},
					{
						"name": "SellEndDate",
						"type": "INT96"
					},
					{
						"name": "DiscontinuedDate",
						"type": "INT96"
					},
					{
						"name": "ProductCategory",
						"type": "UTF8"
					},
					{
						"name": "ProductSubcategory",
						"type": "UTF8"
					},
					{
						"name": "id_sk_product",
						"type": "INT64"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/demosynapsest-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/adl_app_sales')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "demosynapsest-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "sales/adl"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "sales.parquet",
						"folderPath": "application/sales",
						"fileSystem": "synapse"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "id_sk_customer",
						"type": "INT64"
					},
					{
						"name": "OrderDate",
						"type": "UTF8"
					},
					{
						"name": "id_sk_product",
						"type": "INT64"
					},
					{
						"name": "id_sk_salesperson",
						"type": "INT64"
					},
					{
						"name": "id_sk_shipmethod",
						"type": "INT64"
					},
					{
						"name": "id_sk_territory",
						"type": "INT64"
					},
					{
						"name": "OrderQty",
						"type": "DOUBLE"
					},
					{
						"name": "UnitPrice",
						"type": "DOUBLE"
					},
					{
						"name": "UnitPriceDiscount",
						"type": "DOUBLE"
					},
					{
						"name": "LineTotal",
						"type": "DOUBLE"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/demosynapsest-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/adl_app_salesperson')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "demosynapsest-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "sales/adl"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "salesperson.parquet",
						"folderPath": "application/sales",
						"fileSystem": "synapse"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "BusinessEntityID",
						"type": "INT32"
					},
					{
						"name": "TerritoryID",
						"type": "INT32"
					},
					{
						"name": "SalesQuota",
						"type": "FLOAT"
					},
					{
						"name": "Bonus",
						"type": "FLOAT"
					},
					{
						"name": "CommissionPct",
						"type": "FLOAT"
					},
					{
						"name": "id_sk_salesperson",
						"type": "INT64"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/demosynapsest-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/adl_app_shipmethod')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "demosynapsest-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "sales/adl"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "shipmethod.parquet",
						"folderPath": "application/sales",
						"fileSystem": "synapse"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "ShipMethodID",
						"type": "INT32"
					},
					{
						"name": "Name",
						"type": "UTF8"
					},
					{
						"name": "ShipBase",
						"type": "FLOAT"
					},
					{
						"name": "ShipRate",
						"type": "FLOAT"
					},
					{
						"name": "rowguid",
						"type": "UTF8"
					},
					{
						"name": "ModifiedDate",
						"type": "INT96"
					},
					{
						"name": "id_sk_shipmethod",
						"type": "INT64"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/demosynapsest-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/adl_app_territory')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "demosynapsest-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "sales/adl"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "territory.parquet",
						"folderPath": "application/sales",
						"fileSystem": "synapse"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "TerritoryID",
						"type": "INT32"
					},
					{
						"name": "Name",
						"type": "UTF8"
					},
					{
						"name": "CountryRegionCode",
						"type": "UTF8"
					},
					{
						"name": "Group",
						"type": "UTF8"
					},
					{
						"name": "SalesYTD",
						"type": "FLOAT"
					},
					{
						"name": "SalesLastYear",
						"type": "FLOAT"
					},
					{
						"name": "CostYTD",
						"type": "UTF8"
					},
					{
						"name": "CostLastYear",
						"type": "FLOAT"
					},
					{
						"name": "rowguid",
						"type": "UTF8"
					},
					{
						"name": "ModifiedDate",
						"type": "INT96"
					},
					{
						"name": "id_sk_territory",
						"type": "INT64"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/demosynapsest-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/adl_raw_customers')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "demosynapsest-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "sales/adl"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "customer",
						"folderPath": "raw/sales",
						"fileSystem": "synapse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "CustomerID",
						"type": "String"
					},
					{
						"name": "PersonID",
						"type": "String"
					},
					{
						"name": "StoreID",
						"type": "String"
					},
					{
						"name": "TerritoryID",
						"type": "String"
					},
					{
						"name": "AccountNumber",
						"type": "String"
					},
					{
						"name": "ModifiedDate",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/demosynapsest-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/adl_raw_product')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "demosynapsest-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "sales/adl"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "product",
						"folderPath": "raw/sales",
						"fileSystem": "synapse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ProductID",
						"type": "String"
					},
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "ProductNumber",
						"type": "String"
					},
					{
						"name": "MakeFlag",
						"type": "String"
					},
					{
						"name": "FinishedGoodsFlag",
						"type": "String"
					},
					{
						"name": "Color",
						"type": "String"
					},
					{
						"name": "SafetyStockLevel",
						"type": "String"
					},
					{
						"name": "ReorderPoint",
						"type": "String"
					},
					{
						"name": "StandardCost",
						"type": "String"
					},
					{
						"name": "ListPrice",
						"type": "String"
					},
					{
						"name": "Size",
						"type": "String"
					},
					{
						"name": "SizeUnitMeasureCode",
						"type": "String"
					},
					{
						"name": "WeightUnitMeasureCode",
						"type": "String"
					},
					{
						"name": "Weight",
						"type": "String"
					},
					{
						"name": "DaysToManufacture",
						"type": "String"
					},
					{
						"name": "ProductLine",
						"type": "String"
					},
					{
						"name": "Class",
						"type": "String"
					},
					{
						"name": "Style",
						"type": "String"
					},
					{
						"name": "ProductModelID",
						"type": "String"
					},
					{
						"name": "SellStartDate",
						"type": "String"
					},
					{
						"name": "SellEndDate",
						"type": "String"
					},
					{
						"name": "DiscontinuedDate",
						"type": "String"
					},
					{
						"name": "ProductCategory",
						"type": "String"
					},
					{
						"name": "ProductSubcategory",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/demosynapsest-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/adl_raw_sales')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "demosynapsest-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "sales/adl"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "sales",
						"folderPath": "raw/sales",
						"fileSystem": "synapse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "SalesOrderID",
						"type": "String"
					},
					{
						"name": "OrderDate",
						"type": "String"
					},
					{
						"name": "DueDate",
						"type": "String"
					},
					{
						"name": "ShipDate",
						"type": "String"
					},
					{
						"name": "Status",
						"type": "String"
					},
					{
						"name": "OnlineOrderFlag",
						"type": "String"
					},
					{
						"name": "CustomerID",
						"type": "String"
					},
					{
						"name": "SalesPersonID",
						"type": "String"
					},
					{
						"name": "TerritoryID",
						"type": "String"
					},
					{
						"name": "ShipMethodID",
						"type": "String"
					},
					{
						"name": "ProductID",
						"type": "String"
					},
					{
						"name": "OrderQty",
						"type": "String"
					},
					{
						"name": "UnitPrice",
						"type": "String"
					},
					{
						"name": "UnitPriceDiscount",
						"type": "String"
					},
					{
						"name": "LineTotal",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/demosynapsest-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/adl_raw_salesperson')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "demosynapsest-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "sales/adl"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "salesperson",
						"folderPath": "raw/sales",
						"fileSystem": "synapse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "BusinessEntityID",
						"type": "String"
					},
					{
						"name": "TerritoryID",
						"type": "String"
					},
					{
						"name": "SalesQuota",
						"type": "String"
					},
					{
						"name": "Bonus",
						"type": "String"
					},
					{
						"name": "CommissionPct",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/demosynapsest-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/adl_raw_shipmethod')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "demosynapsest-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "sales/adl"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "shipmethod",
						"folderPath": "raw/sales",
						"fileSystem": "synapse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ShipMethodID",
						"type": "String"
					},
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "ShipBase",
						"type": "String"
					},
					{
						"name": "ShipRate",
						"type": "String"
					},
					{
						"name": "rowguid",
						"type": "String"
					},
					{
						"name": "ModifiedDate",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/demosynapsest-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/adl_raw_territory')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "demosynapsest-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "sales/adl"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "territory",
						"folderPath": "raw/sales",
						"fileSystem": "synapse"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "TerritoryID",
						"type": "String"
					},
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "CountryRegionCode",
						"type": "String"
					},
					{
						"name": "Group",
						"type": "String"
					},
					{
						"name": "SalesYTD",
						"type": "String"
					},
					{
						"name": "SalesLastYear",
						"type": "String"
					},
					{
						"name": "CostYTD",
						"type": "String"
					},
					{
						"name": "CostLastYear",
						"type": "String"
					},
					{
						"name": "rowguid",
						"type": "String"
					},
					{
						"name": "ModifiedDate",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/demosynapsest-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dim_customer')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSynapseAnalytics",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "sales/dw"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "CustomerID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PersonID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "StoreID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TerritoryID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AccountNumber",
						"type": "nvarchar"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "id_sk_customer",
						"type": "bigint",
						"precision": 19
					}
				],
				"typeProperties": {
					"schema": "",
					"table": "dim_customer"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureSynapseAnalytics')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dim_product')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSynapseAnalytics",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "sales/dw"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [],
				"typeProperties": {
					"schema": "",
					"table": "dim_product"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureSynapseAnalytics')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dim_salesperson')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSynapseAnalytics",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "sales/dw"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [],
				"typeProperties": {
					"schema": "",
					"table": "dim_salesperson"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureSynapseAnalytics')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dim_shipmethod')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSynapseAnalytics",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "sales/dw"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [],
				"typeProperties": {
					"table": "dim_shipmethod"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureSynapseAnalytics')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dim_territory')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSynapseAnalytics",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "sales/dw"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [],
				"typeProperties": {
					"table": "dim_territory"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureSynapseAnalytics')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/fact_sales')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSynapseAnalytics",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "sales/dw"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [],
				"typeProperties": {
					"schema": "",
					"table": "fact_sales"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureSynapseAnalytics')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/loan_test_table')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSynapseAnalytics",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ML/sinks"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "LoanID",
						"type": "nvarchar"
					},
					{
						"name": "CustomerID",
						"type": "nvarchar"
					},
					{
						"name": "LoanStatus",
						"type": "nvarchar"
					},
					{
						"name": "CurrentLoanAmount",
						"type": "real",
						"precision": 7
					},
					{
						"name": "Term",
						"type": "nvarchar"
					},
					{
						"name": "CreditScore",
						"type": "real",
						"precision": 7
					},
					{
						"name": "AnnualIncome",
						"type": "real",
						"precision": 7
					},
					{
						"name": "Yearsincurrentjob",
						"type": "nvarchar"
					},
					{
						"name": "HomeOwnership",
						"type": "nvarchar"
					},
					{
						"name": "Purpose",
						"type": "nvarchar"
					},
					{
						"name": "MonthlyDebt",
						"type": "real",
						"precision": 7
					},
					{
						"name": "YearsofCreditHistory",
						"type": "real",
						"precision": 7
					},
					{
						"name": "Monthssincelastdelinquent",
						"type": "real",
						"precision": 7
					},
					{
						"name": "NumberofOpenAccounts",
						"type": "real",
						"precision": 7
					},
					{
						"name": "NumberofCreditProblems",
						"type": "real",
						"precision": 7
					},
					{
						"name": "CurrentCreditBalance",
						"type": "real",
						"precision": 7
					},
					{
						"name": "MaximumOpenCredit",
						"type": "real",
						"precision": 7
					},
					{
						"name": "Bankruptcies",
						"type": "real",
						"precision": 7
					},
					{
						"name": "TaxLiens",
						"type": "real",
						"precision": 7
					}
				],
				"typeProperties": {
					"schema": "ML",
					"table": "loans_test"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureSynapseAnalytics')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ml_loan_test_csv')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "demosynapsest-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ML/sources"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "credit_test.csv",
						"folderPath": "raw/MLExample",
						"fileSystem": "synapse"
					},
					"columnDelimiter": ",",
					"rowDelimiter": "\r",
					"encodingName": "UTF-8",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": [
					{
						"name": "LoanID",
						"type": "String"
					},
					{
						"name": "CustomerID",
						"type": "String"
					},
					{
						"name": "LoanStatus",
						"type": "String"
					},
					{
						"name": "CurrentLoanAmount",
						"type": "String"
					},
					{
						"name": "Term",
						"type": "String"
					},
					{
						"name": "CreditScore",
						"type": "String"
					},
					{
						"name": "AnnualIncome",
						"type": "String"
					},
					{
						"name": "Yearsincurrentjob",
						"type": "String"
					},
					{
						"name": "HomeOwnership",
						"type": "String"
					},
					{
						"name": "Purpose",
						"type": "String"
					},
					{
						"name": "MonthlyDebt",
						"type": "String"
					},
					{
						"name": "YearsofCreditHistory",
						"type": "String"
					},
					{
						"name": "Monthssincelastdelinquent",
						"type": "String"
					},
					{
						"name": "NumberofOpenAccounts",
						"type": "String"
					},
					{
						"name": "NumberofCreditProblems",
						"type": "String"
					},
					{
						"name": "CurrentCreditBalance",
						"type": "String"
					},
					{
						"name": "MaximumOpenCredit",
						"type": "String"
					},
					{
						"name": "Bankruptcies",
						"type": "String"
					},
					{
						"name": "TaxLiens",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/demosynapsest-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/src_Sales')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sql_onprem",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "sales/src"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "SalesOrderID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RevisionNumber",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "OrderDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "DueDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ShipDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Status",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "OnlineOrderFlag",
						"type": "bit"
					},
					{
						"name": "SalesOrderNumber",
						"type": "nvarchar"
					},
					{
						"name": "PurchaseOrderNumber",
						"type": "nvarchar"
					},
					{
						"name": "AccountNumber",
						"type": "nvarchar"
					},
					{
						"name": "CustomerID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SalesPersonID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TerritoryID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "BillToAddressID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ShipToAddressID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ShipMethodID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CreditCardID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CreditCardApprovalCode",
						"type": "varchar"
					},
					{
						"name": "CurrencyRateID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SubTotal",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "TaxAmt",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Freight",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "TotalDue",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Comment",
						"type": "nvarchar"
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "Sales",
					"table": "SalesOrderHeader"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/sql_onprem')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/src_customers')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sql_onprem",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "sales/src"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "CustomerID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PersonID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "StoreID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TerritoryID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AccountNumber",
						"type": "varchar"
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "Sales",
					"table": "Customer"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/sql_onprem')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/src_products')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sql_onprem",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "sales/src"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "ProductID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "nvarchar"
					},
					{
						"name": "ProductNumber",
						"type": "nvarchar"
					},
					{
						"name": "MakeFlag",
						"type": "bit"
					},
					{
						"name": "FinishedGoodsFlag",
						"type": "bit"
					},
					{
						"name": "Color",
						"type": "nvarchar"
					},
					{
						"name": "SafetyStockLevel",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "ReorderPoint",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "StandardCost",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "ListPrice",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Size",
						"type": "nvarchar"
					},
					{
						"name": "SizeUnitMeasureCode",
						"type": "nchar"
					},
					{
						"name": "WeightUnitMeasureCode",
						"type": "nchar"
					},
					{
						"name": "Weight",
						"type": "decimal",
						"precision": 8,
						"scale": 2
					},
					{
						"name": "DaysToManufacture",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProductLine",
						"type": "nchar"
					},
					{
						"name": "Class",
						"type": "nchar"
					},
					{
						"name": "Style",
						"type": "nchar"
					},
					{
						"name": "ProductSubcategoryID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProductModelID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SellStartDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "SellEndDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "DiscontinuedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "Production",
					"table": "Product"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/sql_onprem')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/src_salesperson')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sql_onprem",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "sales/src"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "BusinessEntityID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TerritoryID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SalesQuota",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Bonus",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "CommissionPct",
						"type": "smallmoney",
						"precision": 10,
						"scale": 4
					},
					{
						"name": "SalesYTD",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "SalesLastYear",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "Sales",
					"table": "SalesPerson"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/sql_onprem')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/src_shipmethod')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sql_onprem",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "sales/src"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "ShipMethodID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "nvarchar"
					},
					{
						"name": "ShipBase",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "ShipRate",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "Purchasing",
					"table": "ShipMethod"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/sql_onprem')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/src_territory')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sql_onprem",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "sales/src"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "TerritoryID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "nvarchar"
					},
					{
						"name": "CountryRegionCode",
						"type": "nvarchar"
					},
					{
						"name": "Group",
						"type": "nvarchar"
					},
					{
						"name": "SalesYTD",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "SalesLastYear",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "CostYTD",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "CostLastYear",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "Sales",
					"table": "SalesTerritory"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/sql_onprem')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureSynapseAnalytics')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('AzureSynapseAnalytics_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/PowerBI')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "PowerBIWorkspace",
				"typeProperties": {
					"workspaceID": "5bba8501-1b13-46b6-a367-e21e41e590a3",
					"tenantID": "aa82e677-ede4-4f52-8609-25b997f58368"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/azureMLst')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureMLService",
				"typeProperties": {
					"subscriptionId": "[parameters('azureMLst_properties_typeProperties_subscriptionId')]",
					"resourceGroupName": "[parameters('azureMLst_properties_typeProperties_resourceGroupName')]",
					"mlWorkspaceName": "azureMLst",
					"authentication": "MSI"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/demosynapsest-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('demosynapsest-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/demosynapsest-WorkspaceDefaultStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('demosynapsest-WorkspaceDefaultStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/kvrjz')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('kvrjz_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/sql_onprem')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('sql_onprem_connectionString')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "kvrjz",
							"type": "LinkedServiceReference"
						},
						"secretName": "sqlserver-onpremise-password"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/kvrjz')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/irdemosynapse')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Load_Sales')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "adl_raw_sales",
								"type": "DatasetReference"
							},
							"name": "sales"
						},
						{
							"dataset": {
								"referenceName": "adl_app_customers",
								"type": "DatasetReference"
							},
							"name": "customers"
						},
						{
							"dataset": {
								"referenceName": "adl_app_product",
								"type": "DatasetReference"
							},
							"name": "product"
						},
						{
							"dataset": {
								"referenceName": "adl_app_salesperson",
								"type": "DatasetReference"
							},
							"name": "salesPerson"
						},
						{
							"dataset": {
								"referenceName": "adl_app_shipmethod",
								"type": "DatasetReference"
							},
							"name": "shipmethod"
						},
						{
							"dataset": {
								"referenceName": "adl_app_territory",
								"type": "DatasetReference"
							},
							"name": "territory"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "adl_app_sales",
								"type": "DatasetReference"
							},
							"name": "appsales"
						}
					],
					"transformations": [
						{
							"name": "JoinCustomers"
						},
						{
							"name": "Aggregate"
						},
						{
							"name": "JoinProduct"
						},
						{
							"name": "JoinSalesperson"
						},
						{
							"name": "Joinshipmethod"
						},
						{
							"name": "JoinTerritory"
						}
					],
					"script": "source(output(\n\t\tSalesOrderID as string,\n\t\tOrderDate as string,\n\t\tDueDate as string,\n\t\tShipDate as string,\n\t\tStatus as string,\n\t\tOnlineOrderFlag as string,\n\t\tCustomerID as integer,\n\t\tSalesPersonID as integer,\n\t\tTerritoryID as integer,\n\t\tShipMethodID as integer,\n\t\tProductID as integer,\n\t\tOrderQty as float,\n\t\tUnitPrice as float,\n\t\tUnitPriceDiscount as float,\n\t\tLineTotal as float\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> sales\nsource(output(\n\t\tCustomerID as integer,\n\t\tPersonID as integer,\n\t\tStoreID as integer,\n\t\tTerritoryID as integer,\n\t\tAccountNumber as string,\n\t\tModifiedDate as timestamp,\n\t\tid_sk_customer as long\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet') ~> customers\nsource(output(\n\t\tProductID as integer,\n\t\tName as string,\n\t\tProductNumber as string,\n\t\tMakeFlag as integer,\n\t\tFinishedGoodsFlag as integer,\n\t\tColor as string,\n\t\tSafetyStockLevel as integer,\n\t\tReorderPoint as integer,\n\t\tStandardCost as float,\n\t\tListPrice as float,\n\t\tSize as string,\n\t\tSizeUnitMeasureCode as string,\n\t\tWeightUnitMeasureCode as string,\n\t\tWeight as decimal(10,0),\n\t\tDaysToManufacture as integer,\n\t\tProductLine as string,\n\t\tClass as string,\n\t\tStyle as string,\n\t\tProductModelID as integer,\n\t\tSellStartDate as timestamp,\n\t\tSellEndDate as timestamp,\n\t\tDiscontinuedDate as timestamp,\n\t\tProductCategory as string,\n\t\tProductSubcategory as string,\n\t\tid_sk_product as long\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet') ~> product\nsource(output(\n\t\tBusinessEntityID as integer,\n\t\tTerritoryID as integer,\n\t\tSalesQuota as float,\n\t\tBonus as float,\n\t\tCommissionPct as float,\n\t\tid_sk_salesperson as long\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet') ~> salesPerson\nsource(output(\n\t\tShipMethodID as integer,\n\t\tName as string,\n\t\tShipBase as float,\n\t\tShipRate as float,\n\t\trowguid as string,\n\t\tModifiedDate as timestamp,\n\t\tid_sk_shipmethod as long\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet') ~> shipmethod\nsource(output(\n\t\tTerritoryID as integer,\n\t\tName as string,\n\t\tCountryRegionCode as string,\n\t\tGroup as string,\n\t\tSalesYTD as float,\n\t\tSalesLastYear as float,\n\t\tCostYTD as string,\n\t\tCostLastYear as float,\n\t\trowguid as string,\n\t\tModifiedDate as timestamp,\n\t\tid_sk_territory as long\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet') ~> territory\nsales, customers join(sales@CustomerID == customers@CustomerID,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinCustomers\nJoinTerritory aggregate(groupBy(id_sk_customer,\n\t\tOrderDate,\n\t\tid_sk_product,\n\t\tid_sk_salesperson,\n\t\tid_sk_shipmethod,\n\t\tid_sk_territory),\n\tOrderQty = sum(OrderQty),\n\t\tUnitPrice = sum(UnitPrice),\n\t\tUnitPriceDiscount = sum(UnitPriceDiscount),\n\t\tLineTotal = sum(LineTotal)) ~> Aggregate\nJoinCustomers, product join(sales@ProductID == product@ProductID,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinProduct\nJoinProduct, salesPerson join(SalesPersonID == BusinessEntityID,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinSalesperson\nJoinSalesperson, shipmethod join(sales@ShipMethodID == shipmethod@ShipMethodID,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> Joinshipmethod\nJoinshipmethod, territory join(sales@TerritoryID == territory@TerritoryID,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinTerritory\nAggregate sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tid_sk_customer as long,\n\t\tOrderDate as string,\n\t\tid_sk_product as long,\n\t\tid_sk_salesperson as long,\n\t\tid_sk_shipmethod as long,\n\t\tid_sk_territory as long,\n\t\tOrderQty as double,\n\t\tUnitPrice as double,\n\t\tUnitPriceDiscount as double,\n\t\tLineTotal as double\n\t),\n\tformat: 'parquet',\n\tpartitionFileNames:['sales.parquet'],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> appsales"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/adl_raw_sales')]",
				"[concat(variables('workspaceId'), '/datasets/adl_app_customers')]",
				"[concat(variables('workspaceId'), '/datasets/adl_app_product')]",
				"[concat(variables('workspaceId'), '/datasets/adl_app_salesperson')]",
				"[concat(variables('workspaceId'), '/datasets/adl_app_shipmethod')]",
				"[concat(variables('workspaceId'), '/datasets/adl_app_territory')]",
				"[concat(variables('workspaceId'), '/datasets/adl_app_sales')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/load entities')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "adl_raw_customers",
								"type": "DatasetReference"
							},
							"name": "Customers"
						},
						{
							"dataset": {
								"referenceName": "adl_raw_salesperson",
								"type": "DatasetReference"
							},
							"name": "SalesPerson"
						},
						{
							"dataset": {
								"referenceName": "adl_raw_territory",
								"type": "DatasetReference"
							},
							"name": "Territory"
						},
						{
							"dataset": {
								"referenceName": "adl_raw_shipmethod",
								"type": "DatasetReference"
							},
							"name": "ShipMethod"
						},
						{
							"dataset": {
								"referenceName": "adl_raw_product",
								"type": "DatasetReference"
							},
							"name": "Product"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "adl_app_customers",
								"type": "DatasetReference"
							},
							"name": "appcustomers"
						},
						{
							"dataset": {
								"referenceName": "adl_app_salesperson",
								"type": "DatasetReference"
							},
							"name": "appsalesperson"
						},
						{
							"dataset": {
								"referenceName": "adl_app_territory",
								"type": "DatasetReference"
							},
							"name": "appTerritory"
						},
						{
							"dataset": {
								"referenceName": "adl_app_shipmethod",
								"type": "DatasetReference"
							},
							"name": "appShipmethod"
						},
						{
							"dataset": {
								"referenceName": "adl_app_product",
								"type": "DatasetReference"
							},
							"name": "appProduct"
						}
					],
					"transformations": [
						{
							"name": "SurrogateKeyCustomers"
						},
						{
							"name": "SurrogateKeySalesPerson"
						},
						{
							"name": "SurrogateKeyTerritory"
						},
						{
							"name": "SurrogateKeyShipmethod"
						},
						{
							"name": "SurrogateKeyProduct"
						}
					],
					"script": "source(output(\n\t\tCustomerID as integer,\n\t\tPersonID as integer,\n\t\tStoreID as integer,\n\t\tTerritoryID as integer,\n\t\tAccountNumber as string,\n\t\tModifiedDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> Customers\nsource(output(\n\t\tBusinessEntityID as integer,\n\t\tTerritoryID as integer,\n\t\tSalesQuota as float,\n\t\tBonus as float,\n\t\tCommissionPct as float\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> SalesPerson\nsource(output(\n\t\tTerritoryID as integer,\n\t\tName as string,\n\t\tCountryRegionCode as string,\n\t\tGroup as string,\n\t\tSalesYTD as float,\n\t\tSalesLastYear as float,\n\t\tCostYTD as string,\n\t\tCostLastYear as float,\n\t\trowguid as string,\n\t\tModifiedDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> Territory\nsource(output(\n\t\tShipMethodID as integer,\n\t\tName as string,\n\t\tShipBase as float,\n\t\tShipRate as float,\n\t\trowguid as string,\n\t\tModifiedDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ShipMethod\nsource(output(\n\t\tProductID as integer,\n\t\tName as string,\n\t\tProductNumber as string,\n\t\tMakeFlag as integer,\n\t\tFinishedGoodsFlag as integer,\n\t\tColor as string,\n\t\tSafetyStockLevel as integer,\n\t\tReorderPoint as integer,\n\t\tStandardCost as float,\n\t\tListPrice as float,\n\t\tSize as string,\n\t\tSizeUnitMeasureCode as string,\n\t\tWeightUnitMeasureCode as string,\n\t\tWeight as decimal(10,0),\n\t\tDaysToManufacture as integer,\n\t\tProductLine as string,\n\t\tClass as string,\n\t\tStyle as string,\n\t\tProductModelID as integer,\n\t\tSellStartDate as timestamp,\n\t\tSellEndDate as timestamp,\n\t\tDiscontinuedDate as timestamp,\n\t\tProductCategory as string,\n\t\tProductSubcategory as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> Product\nCustomers keyGenerate(output(id_sk_customer as long),\n\tstartAt: 1L) ~> SurrogateKeyCustomers\nSalesPerson keyGenerate(output(id_sk_salesperson as long),\n\tstartAt: 1L) ~> SurrogateKeySalesPerson\nTerritory keyGenerate(output(id_sk_territory as long),\n\tstartAt: 1L) ~> SurrogateKeyTerritory\nShipMethod keyGenerate(output(id_sk_shipmethod as long),\n\tstartAt: 1L) ~> SurrogateKeyShipmethod\nProduct keyGenerate(output(id_sk_product as long),\n\tstartAt: 1L) ~> SurrogateKeyProduct\nSurrogateKeyCustomers sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tCustomerID as integer,\n\t\tPersonID as integer,\n\t\tStoreID as integer,\n\t\tTerritoryID as integer,\n\t\tAccountNumber as string,\n\t\tModifiedDate as timestamp,\n\t\tid_sk_customer as long\n\t),\n\tformat: 'parquet',\n\tpartitionFileNames:['customers.parquet'],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> appcustomers\nSurrogateKeySalesPerson sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tBusinessEntityID as integer,\n\t\tTerritoryID as integer,\n\t\tSalesQuota as float,\n\t\tBonus as float,\n\t\tCommissionPct as float,\n\t\tid_sk_salesperson as long\n\t),\n\tformat: 'parquet',\n\tpartitionFileNames:['salesperson.parquet'],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> appsalesperson\nSurrogateKeyTerritory sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tTerritoryID as integer,\n\t\tName as string,\n\t\tCountryRegionCode as string,\n\t\tGroup as string,\n\t\tSalesYTD as float,\n\t\tSalesLastYear as float,\n\t\tCostYTD as string,\n\t\tCostLastYear as float,\n\t\trowguid as string,\n\t\tModifiedDate as timestamp,\n\t\tid_sk_territory as long\n\t),\n\tformat: 'parquet',\n\tpartitionFileNames:['territory.parquet'],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> appTerritory\nSurrogateKeyShipmethod sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tShipMethodID as integer,\n\t\tName as string,\n\t\tShipBase as float,\n\t\tShipRate as float,\n\t\trowguid as string,\n\t\tModifiedDate as timestamp,\n\t\tid_sk_shipmethod as long\n\t),\n\tformat: 'parquet',\n\tpartitionFileNames:['shipmethod.parquet'],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> appShipmethod\nSurrogateKeyProduct sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tProductID as integer,\n\t\tName as string,\n\t\tProductNumber as string,\n\t\tMakeFlag as integer,\n\t\tFinishedGoodsFlag as integer,\n\t\tColor as string,\n\t\tSafetyStockLevel as integer,\n\t\tReorderPoint as integer,\n\t\tStandardCost as float,\n\t\tListPrice as float,\n\t\tSize as string,\n\t\tSizeUnitMeasureCode as string,\n\t\tWeightUnitMeasureCode as string,\n\t\tWeight as decimal(10,0),\n\t\tDaysToManufacture as integer,\n\t\tProductLine as string,\n\t\tClass as string,\n\t\tStyle as string,\n\t\tProductModelID as integer,\n\t\tSellStartDate as timestamp,\n\t\tSellEndDate as timestamp,\n\t\tDiscontinuedDate as timestamp,\n\t\tProductCategory as string,\n\t\tProductSubcategory as string,\n\t\tid_sk_product as long\n\t),\n\tformat: 'parquet',\n\tpartitionFileNames:['products.parquet'],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> appProduct"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/adl_raw_customers')]",
				"[concat(variables('workspaceId'), '/datasets/adl_raw_salesperson')]",
				"[concat(variables('workspaceId'), '/datasets/adl_raw_territory')]",
				"[concat(variables('workspaceId'), '/datasets/adl_raw_shipmethod')]",
				"[concat(variables('workspaceId'), '/datasets/adl_raw_product')]",
				"[concat(variables('workspaceId'), '/datasets/adl_app_customers')]",
				"[concat(variables('workspaceId'), '/datasets/adl_app_salesperson')]",
				"[concat(variables('workspaceId'), '/datasets/adl_app_territory')]",
				"[concat(variables('workspaceId'), '/datasets/adl_app_shipmethod')]",
				"[concat(variables('workspaceId'), '/datasets/adl_app_product')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/WorkspaceSystemIdentity')]",
			"type": "Microsoft.Synapse/workspaces/credentials",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/create_ML_table')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\n\nCREATE TABLE [ML].[loans_test]\n( \n\tLoanID [nvarchar](max)  NULL,\n\tCustomerID [nvarchar](max)  NULL,\n\tLoanStatus [nvarchar](max)  NULL,\n\tCurrentLoanAmount [real]  NULL,\n\tTerm [nvarchar](max)  NULL,\n\tCreditScore [real] NULL,\n\tAnnualIncome [real] NULL,\n\tYearsincurrentjob [nvarchar](max)  NULL,\n\tHomeOwnership [nvarchar](max)  NULL,\n\tPurpose [nvarchar](max)  NULL,\n\tMonthlyDebt [real] NULL,\n\tYearsofCreditHistory [real] NULL,\n\tMonthssincelastdelinquent [real] NULL,\n\tNumberofOpenAccounts [real] NULL,\n\tNumberofCreditProblems [real] NULL,\n\tCurrentCreditBalance [real] NULL,\n\tMaximumOpenCredit [real] NULL,\n\tBankruptcies [real] NULL,\n\tTaxLiens [real] NULL\n)\nWITH\n(\n\tDISTRIBUTION = ROUND_ROBIN,\n\tHEAP\n)\nGO\n\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "dedicateddemosynapse",
						"poolName": "dedicateddemosynapse"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/create_external_table_products')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "USE [sample]\nGO\n\nCREATE MASTER KEY ENCRYPTION BY PASSWORD = '4Im3zNybHzadbDgaxW5nC9fJIGnwHzXb'\nGO\n\nDROP DATABASE SCOPED CREDENTIAL [sqlondemand]\nGO\n\nCREATE DATABASE SCOPED CREDENTIAL [sqlondemand]\nWITH IDENTITY='SHARED ACCESS SIGNATURE',  \nSECRET = 'sp=r&st=2022-03-08T16:00:31Z&se=2022-03-09T00:00:31Z&spr=https&sv=2020-08-04&sr=c&sig=IC34xX9bzm9UTijiQsb0BjlaYjFIgLcK83zjG4aTCVw%3D'\n\ngo\n\n\nIF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE name = 'SynapseParquetFormat') \n\tCREATE EXTERNAL FILE FORMAT [SynapseParquetFormat] \n\tWITH ( FORMAT_TYPE = PARQUET)\nGO\n\n\n\nIF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE name = 'synapse_adldemost_dfs_core_windows_net') \n\tCREATE EXTERNAL DATA SOURCE [synapse_adldemost_dfs_core_windows_net] \n\tWITH (\n\t\tLOCATION = 'abfss://synapse@adldemost.dfs.core.windows.net' ,\n\t\t CREDENTIAL = sqlondemand\n\t)\nGO\n\nCREATE EXTERNAL TABLE products (\n\t[ProductID] int,\n\t[Name] nvarchar(4000),\n\t[ProductNumber] nvarchar(4000),\n\t[MakeFlag] int,\n\t[FinishedGoodsFlag] int,\n\t[Color] nvarchar(4000),\n\t[SafetyStockLevel] int,\n\t[ReorderPoint] int,\n\t[StandardCost] real,\n\t[ListPrice] real,\n\t[Size] nvarchar(4000),\n\t[SizeUnitMeasureCode] nvarchar(4000),\n\t[WeightUnitMeasureCode] nvarchar(4000),\n\t[Weight] numeric(10,0),\n\t[DaysToManufacture] int,\n\t[ProductLine] nvarchar(4000),\n\t[Class] nvarchar(4000),\n\t[Style] nvarchar(4000),\n\t[ProductModelID] int,\n\t[SellStartDate] datetime2(7),\n\t[SellEndDate] datetime2(7),\n\t[DiscontinuedDate] datetime2(7),\n\t[ProductCategory] nvarchar(4000),\n\t[ProductSubcategory] nvarchar(4000),\n\t[id_sk_product] bigint\n\t)\n\tWITH (\n\tLOCATION = 'application/sales/products.parquet',\n\tDATA_SOURCE = [synapse_adldemost_dfs_core_windows_net],\n\tFILE_FORMAT = [SynapseParquetFormat]\n\t)\nGO\n\n\nSELECT TOP 100 * FROM dbo.products\nGO",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "sample",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/drop_external_table_products')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "DROP EXTERNAL TABLE products\nGO\n\nDROP EXTERNAL DATA SOURCE [synapse_adldemost_dfs_core_windows_net] \nGO\n\nDROP EXTERNAL FILE FORMAT [SynapseParquetFormat] \nGO\n\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "sample",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AutogeneratedAutoMLTimeSeriesNotebook')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"nbformat": 4,
				"nbformat_minor": 2,
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 2,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2",
						"spark.autotune.trackingId": "01ef189e-81c4-4e3d-b382-e72dccc2f284"
					}
				},
				"metadata": {
					"saveOutput": true,
					"enableDebugMode": false,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"sessionKeepAliveTimeout": 30
				},
				"cells": [
					{
						"cell_type": "code",
						"metadata": {},
						"source": [
							"import azureml.core\n",
							"\n",
							"from azureml.core import Experiment, Workspace, Dataset, Datastore\n",
							"from azureml.train.automl import AutoMLConfig\n",
							"from notebookutils import mssparkutils\n",
							"from azureml.data.dataset_factory import TabularDatasetFactory"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"metadata": {},
						"source": [
							"linkedService_name = \"azureMLst\"\n",
							"experiment_name = \"demosynapsest-vuelos_20172018_ld-20220309120544\"\n",
							"\n",
							"ws = mssparkutils.azureML.getWorkspace(linkedService_name)\n",
							"experiment = Experiment(ws, experiment_name)"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"metadata": {},
						"source": [
							"df = spark.sql(\"SELECT * FROM default.vuelos_20172018_ld\")\n",
							"\n",
							"datastore = Datastore.get_default(ws)\n",
							"dataset = TabularDatasetFactory.register_spark_dataframe(df, datastore, name = experiment_name + \"-dataset\")"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"metadata": {},
						"source": [
							"from azureml.automl.core.forecasting_parameters import ForecastingParameters\n",
							"\n",
							"forecasting_parameters = ForecastingParameters(\n",
							"    time_column_name = \"date\",\n",
							"    forecast_horizon = \"auto\",\n",
							"    time_series_id_column_names = [\"airport_code\"],\n",
							")\n",
							"\n",
							"automl_config = AutoMLConfig(spark_context = sc,\n",
							"                             task = \"forecasting\",\n",
							"                             training_data = dataset,\n",
							"                             label_column_name = \"n_flights\",\n",
							"                             primary_metric = \"normalized_root_mean_squared_error\",\n",
							"                             experiment_timeout_hours = 3,\n",
							"                             max_concurrent_iterations = 2,\n",
							"                             n_cross_validations = 3,\n",
							"                             forecasting_parameters = forecasting_parameters)"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"metadata": {},
						"source": [
							"run = experiment.submit(automl_config)"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"metadata": {},
						"source": [
							"displayHTML(\"<a href={} target='_blank'>Your experiment in Azure Machine Learning portal: {}</a>\".format(run.get_portal_url(), run.id))"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"metadata": {},
						"source": [
							"run.wait_for_completion()\n",
							"\n",
							"import mlflow\n",
							"\n",
							"# Get best model from automl run\n",
							"best_run, non_onnx_model = run.get_output()\n",
							"\n",
							"artifact_path = experiment_name + \"_artifact\"\n",
							"\n",
							"mlflow.set_tracking_uri(ws.get_mlflow_tracking_uri())\n",
							"mlflow.set_experiment(experiment_name)\n",
							"\n",
							"with mlflow.start_run() as run:\n",
							"    # Save the model to the outputs directory for capture\n",
							"    mlflow.sklearn.log_model(non_onnx_model, artifact_path)\n",
							"\n",
							"    # Register the model to AML model registry\n",
							"    mlflow.register_model(\"runs:/\" + run.info.run_id + \"/\" + artifact_path, \"demosynapsest-vuelos_20172018_ld-20220309120544-Best\")"
						],
						"outputs": [],
						"execution_count": null
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/HowToDeleteSparkTable')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"nbformat": 4,
				"nbformat_minor": 2,
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 2,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2",
						"spark.autotune.trackingId": "2dad790f-74d5-4c02-812a-a8cdde27de82"
					}
				},
				"metadata": {
					"saveOutput": true,
					"enableDebugMode": false,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"sessionKeepAliveTimeout": 30
				},
				"cells": [
					{
						"cell_type": "code",
						"metadata": {
							"microsoft": {
								"language": "python"
							}
						},
						"source": [
							"%%pyspark\n",
							"sqlContext.sql(\"drop table `default`.`yourtablename`\")"
						],
						"outputs": [],
						"execution_count": 9
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/LoadCSVtoASPoolST')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"nbformat": 4,
				"nbformat_minor": 2,
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 2,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2",
						"spark.autotune.trackingId": "2acb83d2-a18d-482b-b3a9-3199bb609064"
					}
				},
				"metadata": {
					"saveOutput": true,
					"enableDebugMode": false,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"sessionKeepAliveTimeout": 30
				},
				"cells": [
					{
						"cell_type": "code",
						"metadata": {
							"microsoft": {
								"language": "python"
							}
						},
						"source": [
							"%%pyspark\r\n",
							"df = spark.read.load('abfss://synapse@adldemost.dfs.core.windows.net/raw/MLExample/credit_train.csv', \r\n",
							"                        format='csv', \r\n",
							"                        sep=\",\",\r\n",
							"                        header=True,\r\n",
							"                        inferSchema=True\r\n",
							"## If header exists uncomment line below\r\n",
							"##, header=True\r\n",
							")\r\n",
							"# df.show()\r\n",
							"df = df.drop('LoanID')\r\n",
							"df.columns"
						],
						"outputs": [],
						"execution_count": 10
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"df.write.mode(\"overwrite\").saveAsTable(\"default.loans_training\")"
						],
						"outputs": [],
						"execution_count": 11
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/dedicateddemosynapse')]",
			"type": "Microsoft.Synapse/workspaces/sqlPools",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"collation": "SQL_Latin1_General_CP1_CI_AS",
				"maxSizeBytes": 263882790666240,
				"annotations": []
			},
			"dependsOn": [],
			"location": "westeurope"
		}
	]
}