{
	"name": "LoadCSVtoASPoolST",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "APSparkPoolST",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "f022ccb9-3d27-4a3e-8f8c-61277ef99f44"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/d633e14e-b627-40ae-8c9a-7f0dc15c2bd7/resourceGroups/rauljareno/providers/Microsoft.Synapse/workspaces/demosynapsest/bigDataPools/APSparkPoolST",
				"name": "APSparkPoolST",
				"type": "Spark",
				"endpoint": "https://demosynapsest.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/APSparkPoolST",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.1",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"microsoft": {
						"language": "python"
					}
				},
				"source": [
					"%%pyspark\r\n",
					"df = spark.read.load('abfss://synapse@adldemost.dfs.core.windows.net/raw/MLExample/credit_train.csv', \r\n",
					"                        format='csv', \r\n",
					"                        sep=\",\",\r\n",
					"                        header=True,\r\n",
					"                        inferSchema=True\r\n",
					"## If header exists uncomment line below\r\n",
					"##, header=True\r\n",
					")\r\n",
					"# df.show()\r\n",
					"df = df.drop('LoanID')\r\n",
					"df.columns"
				],
				"execution_count": 10
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"df.write.mode(\"overwrite\").saveAsTable(\"default.loans_training\")"
				],
				"execution_count": 11
			}
		]
	}
}